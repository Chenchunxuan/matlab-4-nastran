% Translates a Proteus model into a Nastran model.

% Add matlab-4-nastran folder and subfolders to Matlab path
addpath(genpath(['..',filesep,'..']));

%% Excel input file name
excelFilePath = ['.',filesep,'Proteus2NastranInput.xlsx'];

%% Load Proteus data
proteusDataStruct = loadProteusData(excelFilePath);

%% Load Nastran settings
nastranSettingStruct = loadNastranSettings(excelFilePath);

%% Initialize NastranBulkData object
nastranBulkData = proteus2InitializedNastranBulkData(proteusDataStruct,...
    nastranSettingStruct);

%% Produce Nastran mesh (nodes and elements)
proteusGeometry2NastranMesh(nastranBulkData,proteusDataStruct,...
    nastranSettingStruct);

%% Apply clamp at root
applyProteusRootClamp(nastranBulkData)

%% Generate concentrated masses
proteusNonStructuralMasses2NastranConm2(nastranBulkData,proteusDataStruct);

%% Generate aerodynamic model and aeroelastic coupling
proteus2NastranAero(nastranBulkData,proteusDataStruct,...
    nastranSettingStruct);

%% Apply Proteus load cases to Nastran model
staticAeroelasticSubcaseVector = applyProteusLoadCases(nastranBulkData,...
    proteusDataStruct);

%% Add cards to bulk data
nastranBulkData.ParamArray = [nastranBulkData.ParamArray,...
    Param(struct('n','PRTMAXIM','v1','YES'))];
nastranBulkData.EigrlArray = Eigrl(struct(...
    'v1',0,...
    'sid',nastranSettingStruct.lastSetId.addId,...
    'nd',20));

%% Generate SOL 103 analysis object
sol103ExecutiveControl = NastranExecutiveControl(103);
sol103CaseControl = NastranCaseControl(struct(...
    'title',sprintf('NASTRAN MODEL CONVERTED FROM PROTEUS MODEL %s',...
    proteusDataStruct.constant.model),...
    'subti',sprintf(['FLANGE SIZE: %.4f m, STRUCTURAL ELEMENT EDGE SIZE: ',...
    '%.4f m, AERODYNAMIC ELEMENT EDGE SIZE: %.4f m'],...
    nastranSettingStruct.flangeSize,...
    nastranSettingStruct.structuralEdgeSize,...
    nastranSettingStruct.aerodynamicEdgeSize),...
    'spc',nastranBulkData.Spc1Array,...
    'method',nastranBulkData.EigrlArray,...
    'strain',[],...
    'stress',[]));
sol103Analysis = NastranAnalysis(struct('name',nastranSettingStruct.name,...
    'executiveControl',sol103ExecutiveControl,...
    'caseControl',sol103CaseControl,'bulkData',copy(nastranBulkData)));

%% Generate SOL 144 analysis object
% Define set of grid points for grid point force balance output
setCaseForceBalance = Set(struct('n',nastranBulkData.LastSetId.addId,...
    'gridVector',nastranBulkData.Set1Array.GridVector));
% Generate objects
sol144ExecutiveControl = NastranExecutiveControl(144);
sol144CaseControl = NastranCaseControl(struct(...
    'title',sprintf('NASTRAN MODEL CONVERTED FROM PROTEUS MODEL %s',...
    proteusDataStruct.constant.model),...
    'subti',sprintf(['FLANGE SIZE: %.4f m, STRUCTURAL ELEMENT EDGE SIZE: ',...
    '%.4f m, AERODYNAMIC ELEMENT EDGE SIZE: %.4f m'],...
    nastranSettingStruct.flangeSize,...
    nastranSettingStruct.structuralEdgeSize,...
    nastranSettingStruct.aerodynamicEdgeSize),...
    'spc',nastranBulkData.Spc1Array,...
    'subcaseArray',staticAeroelasticSubcaseVector,...
    'set',setCaseForceBalance,...
    'gpforce',setCaseForceBalance.N));
sol144Analysis = NastranAnalysis(struct('name',nastranSettingStruct.name,...
    'executiveControl',sol144ExecutiveControl,...
    'caseControl',sol144CaseControl,'bulkData',copy(nastranBulkData)));
