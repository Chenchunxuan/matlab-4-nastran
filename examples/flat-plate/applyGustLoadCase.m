function applyGustLoadCase(nastranBulkData,flatPlateSettingStruct)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

%% Generate Aero object
[~,a,~,rho] = atmosisa(0);
nastranBulkData.AeroArray =...
    Aero(struct('acsid',nastranBulkData.Cord2rArray.Cid,...
    'velocity',flatPlateSettingStruct.staticLoadCaseVelocity,...
    'refc',flatPlateSettingStruct.chord,...
    'rhoref',rho,...
    'symxz',1));

%% Structural damping definition
nastranBulkData.Tabdmp1Array = Tabdmp1(struct(...
    'tid',nastranBulkData.LastTableId.addId,...
    'fi',[0,flatPlateSettingStruct.gustLoadCaseCutOffFrequency],...
    'gi',[0.02,0.02]));

%% Define gust
[timeVector,gustVelocityVector,gustDelay,solutionPeriod] =...
    generateNastranGustSignal(...
    flatPlateSettingStruct.staticLoadCaseVelocity,...
    flatPlateSettingStruct.gustLoadCaseFrequency,...
    flatPlateSettingStruct.gustLoadCaseType);

% Genereate Tabled1 object
nastranBulkData.Tabled1Array = Tabled1(struct(...
    'tid',nastranBulkData.LastTableId.addId,...
    'xi',timeVector,...
    'yi',gustVelocityVector));
% Generate Darea object
nastranBulkData.DareaArray = Darea(struct(...
    'sid',nastranBulkData.LastSetId.addId,...
    'pi',1,...
    'ci',1,...
    'ai',0));
% Genereate Tload1 object
nastranBulkData.Tload1Array = Tload1(struct(...
    'sid',nastranBulkData.LastSetId.addId,...
    'excited',nastranBulkData.DareaArray.Sid,...
    'tid',nastranBulkData.Tabled1Array.Tid));
% Generate objects
nastranBulkData.GustArray = Gust(struct(...
    'sid',nastranBulkData.LastSetId.addId,...
    'dload',nastranBulkData.Tload1Array.Sid,...
    'wg',tand(flatPlateSettingStruct.gustLoadCaseDeltaAlpha),...
    'x0',-gustDelay*flatPlateSettingStruct.staticLoadCaseVelocity,...
    'v',flatPlateSettingStruct.staticLoadCaseVelocity));


%% Define set of frequencies for the frequency response solution
% Define solution period as multiple of the gust period
frequencyStep = 1/solutionPeriod;
nastranBulkData.Freq1Array = Freq1(struct(...
    'sid',nastranBulkData.LastSetId.addId,...
    'f1',1e-5,...
    'df',frequencyStep,...
    'ndf',ceil(flatPlateSettingStruct.gustLoadCaseCutOffFrequency/...
    frequencyStep)));

%% Define time step for the transient response output
timeStep = 1/flatPlateSettingStruct.gustLoadCaseFrequency/100;
nastranBulkData.TstepArray = Tstep(struct(...
    'sid',nastranBulkData.LastSetId.addId,...
    'ni',ceil(1/nastranBulkData.Freq1Array.Df/timeStep),...
    'dti',timeStep,...
    'noi',1));

%% Define Param cards relative to the gust
% Mach number
machNumber = flatPlateSettingStruct.staticLoadCaseVelocity/a;
% Dynamic pressure
dynamicPressure = 0.5*rho*flatPlateSettingStruct.staticLoadCaseVelocity^2;
% Solution parameters: harmonic gust aerodynamic
% coefficients, flight conditions amd number of modes used in
% the analysis
paramVector = Param(struct(...
    'n',{'GRDPNT','GUSTAERO','LMODES','MACH','Q'},...
    'v1',{nastranBulkData.GridArray(1).Id,-1,...
    nastranBulkData.EigrlArray.Nd,machNumber,dynamicPressure}));
nastranBulkData.ParamArray = [nastranBulkData.ParamArray,paramVector];

%% Define reduced frequencies for calculation of aerodynamic matrices
% Calculate max reduced frequency taking into account the gust frequency
maxReducedFrequency = 2*pi*flatPlateSettingStruct.gustLoadCaseFrequency*...
    nastranBulkData.AeroArray.Refc/(2*nastranBulkData.AeroArray.Velocity);
% Mach Numbers and reduced frequencies used in generating the
% aerodynamic matrices
kj = logspace(log10(0.001),log10(ceil(maxReducedFrequency*10)*0.1),5);
nastranBulkData.Mkaero1Array = Mkaero1(struct(...
    'mi',machNumber,...
    'kj',kj));
end
